<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lin.dao.BookMapper" >
    <select id="searchBookListCount" resultType="java.lang.Integer">
        select COUNT(b.id)
        from
            book b
        where 1=1
        AND
            b.state = 1
        <if test="null != keyword and '' != keyword">
            AND (b.book_name LIKE CONCAT(#{keyword}, '%') or b.book_author LIKE CONCAT(#{keyword}, '%'))
        </if>
    </select>

    <select id="searchBookList" resultType="com.lin.vo.BookListVo">
        select
            b.id,
            b.book_name AS bookName,
            b.book_author AS bookAuthor,
            b.amount AS amount,
            b.book_quantity AS bookQuantity,
            bt.book_type_name AS bookTypeName
        from
        book b
        left join book_type bt on b.book_type_id = bt.id
        WHERE 1 = 1
        AND
        b.state = 1
        <if test="keyword != null and keyword !='' ">
            AND (b.book_name LIKE CONCAT(#{keyword}, '%') or b.book_author LIKE CONCAT(#{keyword}, '%') or bt.book_type_name LIKE CONCAT(#{keyword}, '%') )
        </if>
        order by b.upload_time desc
        LIMIT #{page}, #{rows}
    </select>

    <select id="searchBookInfoList" resultType="com.lin.vo.BookInfoVo">
        select
            b.book_name AS bookName,
            b.book_author AS bookAuthor,
            b.amount AS amount,
            b.book_quantity AS bookQuantity,
            bt.book_type_name AS bookTypeName,
            b.upload_time uploadTime,
            b.book_url bookUrl,
            bt.book_type_name bookTypeName,
            bt.book_content bookContent
        from
        book b
        left join book_type bt on b.book_type_id = bt.id
        WHERE
        b.id in (#{ids})
    </select>

</mapper>